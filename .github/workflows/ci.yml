name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: shortener
          POSTGRES_PASSWORD: shortener
          POSTGRES_DB: shortener
        options: >-
          --health-cmd="pg_isready -U shortener -d shortener" 
          --health-interval=10s --health-timeout=5s --health-retries=10

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1" 
          --health-interval 10s --health-timeout 5s --health-retries 10

    env:
      # Point the app/tests to the Postgres service running on the runner host
      # APP_ENV intentionally NOT set to avoid poisoning tests
      APP_RUN_MIGRATIONS: "true"
      DB_URL: jdbc:postgresql://localhost:5432/shortener
      DB_USER: shortener
      DB_PASSWORD: shortener

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Show Java and Gradle versions
        run: |
          java -version
          ./gradlew --version

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U shortener -d shortener; then
              echo "Postgres is ready"; break; fi;
            echo "Waiting for Postgres... ($i)"; sleep 2;
          done

      - name: Run ktlint and detekt
        run: ./gradlew --stacktrace ktlintCheck detekt

      - name: Run tests and build
        run: ./gradlew --stacktrace test build
